[package]
build = "build.rs"
description = "this crate implements additional models using the concision framework"
name = "concision-models"

authors.workspace = true
categories.workspace = true
edition.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[package.metadata.docs.rs]
all-features = false
features = ["full"]
rustc-args = ["--cfg", "docsrs"]
version = "v{{version}}"

[package.metadata.release]
no-dev-version = true
tag-name = "{{version}}"

[lib]
crate-type = [
    "cdylib",
    "rlib",
]
bench = false
doc = true
doctest = true
test = true

[dependencies]
concision-kan = { optional = true, workspace = true }
concision-s4 = { optional = true, workspace = true }
concision-transformer = { optional = true, workspace = true }
# local
concision = { features = ["neural"], workspace = true }
concision-ext = { workspace = true }
# custom
scsys = { workspace = true }
# error handling
anyhow = { optional = true, workspace = true }
# mathematics
approx = { optional = true, workspace = true }
ndarray = { workspace = true }
num-traits = { workspace = true }
# logging
tracing = { optional = true, workspace = true }

[dev-dependencies]
anyhow = { features = ["std"], workspace = true }
lazy_static ={ workspace = true }
tracing-subscriber = { features = ["std"], workspace = true }

[features]
default = [
    "simple",
    "std",
]

full = [
    "anyhow",
    "default",
    "models",
    "rand",
    "serde",
    "tracing"
]

# ************* [FF:Features] *************
models = [
    "simple",
    "transformer"
]

simple = []

kan = ["dep:concision-kan"]

s4 = ["dep:concision-s4"]

transformer = ["dep:concision-transformer"]

# ************* [FF:Environments] *************
std = [
    "concision/std",
    "concision-ext/std",
    "concision-kan?/std",
    "concision-s4?/std",
    "concision-transformer?/std",
    "scsys/std",
    "ndarray/std",
    "num-traits/std",
    "tracing?/std",
]

# ************* [FF:Dependencies] *************
anyhow = [
    "dep:anyhow",
    "concision/anyhow",
    "concision-ext/anyhow",
    "concision-kan?/anyhow",
    "concision-s4?/anyhow",
    "concision-transformer?/anyhow",
    "scsys/anyhow",
]

approx = [
    "dep:approx",
    "concision/approx",
    "concision-ext/approx",
    "concision-kan?/approx",
    "concision-s4?/approx",
    "concision-transformer?/approx",
    "ndarray/approx",
]

blas = [
    "concision/blas",
    "concision-ext/blas",
    "concision-kan?/blas",
    "concision-s4?/blas",
    "concision-transformer?/blas",
    "ndarray/blas",
]

rand = [
    "concision/rand",
    "concision-ext/rand",
    "concision-kan?/rand",
    "concision-s4?/rand",
    "concision-transformer?/rand",
]

rayon = [
    "concision/rayon",
    "concision-ext/rayon",
    "concision-kan?/rayon",
    "concision-s4?/rayon",
    "concision-transformer?/rayon",
    "ndarray/rayon",
]

serde = [
    "concision/serde",
    "concision-ext/rng",
    "concision-kan?/serde",
    "concision-s4?/serde",
    "concision-transformer?/serde",
    "ndarray/serde",
    "scsys/serde",
]

tracing = [
    "dep:tracing",
    "concision/tracing",
    "concision-ext/tracing",
    "concision-kan?/tracing",
    "concision-s4?/tracing",
    "concision-transformer?/tracing",
    "scsys/tracing",
]

# ************* [Examples] *************
[[example]]
name = "simple"
required-features = [
    "anyhow",
    "approx",
    "rand",
    "tracing",
]

# ************* [FF:Dependencies] *************
[[test]]
name = "simple"
required-features = [
    "anyhow",
    "approx",
    "rand",
]
