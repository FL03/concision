name: Rust

concurrency: 
  cancel-in-progress: false
  group: ${{ github.event.repository.name }}-rust

env:
  CARGO_TERM_COLOR: always

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags: [ v*.*.* ]
  release:
    types: [ created ]
  repository_dispatch:
    types: [ rust ]
  schedule:
    - cron: "30 21 * * 0" # Every Sunday at 9:30pm UTC
  workflow_dispatch:

permissions: write-all

jobs:
  build:
    name: Build
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        toolchain: [ stable, nightly ]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: setup (langspace)
        run: |
          rustup default ${{ matrix.toolchain }}
          rustup update
      - name: Build (release)
        run: cargo build -r -v --workspace
      - name: Cache build
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/release

  bench:
    name: Benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: setup (langspace)
        run: |
          rustup default nightly
          rustup update
      - name: Bench
        run: cargo bench --all -v
  test:
    name: Test
    strategy:
      matrix:
        toolchain: [ stable, nightly ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: setup (langspace)
        run: |
          rustup default ${{ matrix.toolchain }}
          rustup update
      - name: Test
        run: cargo test --features full -v --workspace
  blas:
    continue-on-error: true
    name: Test (blas)
    strategy:
      matrix:
        crate: [ core, data, gnn, linear ]
        toolchain: [ stable ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: rustup
        run: |
          rustup default ${{ matrix.toolchain }}
          rustup update
      - name: test
        run: cargo test --features blas -v --package ${{ github.event.repository.name }}-${{ matrix.crate }}
