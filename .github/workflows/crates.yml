name: crates-io

concurrency:
  cancel-in-progress: false
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  CARGO_TERM_COLOR: always

on:
  push:
    tags: [ v*, "*-nightly" ]
  repository_dispatch:
    types: [ crates-io ]
  workflow_dispatch:

permissions:
  contents: read
  deployments: read
  packages: write

jobs:
  features:
    env:
      PKG_PREFIX: ${{ github.event.repository.name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - 
        name: rustup
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          cache-workspaces: true
      - 
        name: publish (features)
        run: |
          cargo publish --all-features -v -p ${{ env.PKG_PREFIX }}-math
          cargo publish --all-features -v -p ${{ env.PKG_PREFIX }}-core
          cargo publish --all-features -v -p ${{ env.PKG_PREFIX }}-data
          cargo publish --all-features -v -p ${{ env.PKG_PREFIX }}-derive
          cargo publish --all-features -v -p ${{ env.PKG_PREFIX }}-macros
          cargo publish --all-features -v -p ${{ env.PKG_PREFIX }}-gnn
          cargo publish --all-features -v -p ${{ env.PKG_PREFIX }}-kan
          cargo publish --all-features -v -p ${{ env.PKG_PREFIX }}-linear
          cargo publish --all-features -v -p ${{ env.PKG_PREFIX }}-s4
          cargo publish --all-features -v -p ${{ env.PKG_PREFIX }}-transformers
  publish:
    needs: features
    env:
      PACKAGE: ${{ github.event.repository.name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - 
        name: rustup
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          cache-workspaces: true
      - 
        name: publish (${{ env.PACKAGE }})
        run: cargo publish --all-features -v -p ${{ env.PACKAGE }}
