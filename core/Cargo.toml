[package]
build = "build.rs"
name = "concision-core"

authors.workspace = true
categories.workspace = true
description.workspace = true
edition.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
version.workspace = true

[features]
default = [ "std" ]
full = [
    "anyhow",
    "approx",
    "complex",
    "default",
    "json",
    "rand",
    "serde",
    "tracing",
]

signal =[
    "complex",
    "concision-math/signal"
]

# ********* [FF] Dependencies *********
alloc = [
    "concision-math/alloc",
    "num/alloc",
    "serde?/alloc"
]

anyhow = ["dep:anyhow"]

approx = [
    "concision-math/approx",
    "dep:approx",
    "ndarray/approx",
]

blas = [
    "concision-math/blas",
    "ndarray/blas",
]

complex = [
    "dep:num-complex",
    "concision-math/complex",
]

json = [
    "dep:serde_json",
    "serde_json?/alloc",
    "serde"
]

rand = [
    "concision-math/rand",
    "dep:rand",
    "dep:rand_distr",
    "num/rand",
    "num-complex?/rand",
    "rng",
]

rayon = [
    "dep:rayon",
    "concision-math/rayon",
    "ndarray/rayon",
]

rng = [
    "dep:getrandom",
    "concision-math/rng",
    "rand?/small_rng",
    "rand?/thread_rng",
]

rustfft = [
    "concision-math/rustfft",
]

serde = [
    "concision-math/serde",
    "dep:serde",
    "dep:serde_derive",
    "ndarray/serde",
    "num/serde",
    "num-complex?/serde",
    "rand?/serde",
    "rand_distr?/serde",
]

tracing = [
    "concision-math/tracing",
    "dep:tracing",
]

# ********* [FF] Environments *********
std = [
    "alloc",
    "anyhow?/std",
    "concision-math/std",
    "ndarray/std",
    "num/std",
    "num-complex?/std",
    "num-traits/std",
    "rand?/std",
    "rand?/std_rng",
    "serde/std",
    "strum/std",
    "thiserror/std",
]

[lib]
bench = false
crate-type = [
    "cdylib",
    "rlib",
]
doctest = false
test = true

[dev-dependencies]
lazy_static.workspace = true

[dependencies]
# custom / local
concision-math = { workspace = true }
scsys-derive = { workspace = true }
# standard deps
anyhow = { optional = true, workspace = true }
approx = { optional = true, workspace = true }
ndarray = { workspace = true }
num = { workspace = true }
num-complex = { optional = true, workspace = true }
num-traits = { workspace = true }
paste = { workspace = true }
rayon = { optional = true, workspace = true }
serde = { features = ["derive"], optional = true, workspace = true }
serde_derive = { optional = true, workspace = true }
serde_json = { optional = true, workspace = true }
smart-default = { workspace = true }
strum = { workspace = true }
thiserror = { workspace = true }
tracing = { optional = true, workspace = true }

# random
getrandom = { default-features = false, optional = true, workspace = true }
rand = { optional = true, workspace = true }
rand_distr = { optional = true, workspace = true }

[package.metadata.docs.rs]
all-features = true
rustc-args = [
    "--cfg",
    "docsrs",
]

[[test]]
name = "default"

[[test]]
name = "init"
required-features = ["rand", "std"]

[[test]]
name = "traits"
required-features = ["std"]

[[test]]
name = "utils"
required-features = ["std"]

