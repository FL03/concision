[package]
build = "build.rs"
description = "this crate implements additional models using the concision framework"
name = "concision-ext"

authors.workspace = true
categories.workspace = true
edition.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[package.metadata.docs.rs]
all-features = false
features = ["full"]
rustc-args = ["--cfg", "docsrs"]
version = "v{{version}}"

[package.metadata.release]
no-dev-version = true
tag-name = "{{version}}"

[lib]
crate-type = [
    "cdylib",
    "rlib",
]
bench = false
doc = true
doctest = true
test = true

[dependencies]
# local
concision = { features = ["neural"], workspace = true }
# custom
scsys = { workspace = true }
# concurrency & parallelism
rayon = { optional = true, workspace = true }
# data-structures
ndarray = { workspace = true }
# error handling
anyhow = { optional = true, workspace = true }
# mathematics
approx = { optional = true, workspace = true }
num = { workspace = true }
num-complex = { optional = true, workspace = true }
num-traits = { workspace = true }
rustfft = { optional = true, workspace = true }
# serialization
serde = { optional = true, workspace = true }
serde_derive = { optional = true, workspace = true }
serde_json = { optional = true, workspace = true }
# logging
tracing = { optional = true, workspace = true }

[dev-dependencies]
anyhow = { features = ["std"], workspace = true }
lazy_static ={ workspace = true }
tracing-subscriber = { features = ["std"], workspace = true }

[features]
default = [
    "attention",
    "std",
]

full = [
    "default",
    "anyhow",
    "complex",
    "rand",
    "json",
    "serde",
    "tracing"
]

nightly = [
    "concision/nightly",
]

# ************* [FF:Features] *************
attention = []

signal = [
    "complex",
    "rustfft"
]

json = [
    "alloc",
    "serde",
    "serde_json",
]

init = [
    "concision/init", 
    "rand"
]
# ************* [FF:Environments] *************
std = [
    "alloc",
    "anyhow?/std",
    "approx?/std",
    "concision/std",
    "ndarray/std",
    "num/std",
    "num-complex?/std",
    "num-traits/std",
    "scsys/std",
    "serde?/std",
    "serde_json?/std",
    "tracing?/std",
]

wasi = [
    "concision/wasi",
    "scsys/wasi",
]

wasm = [
    "concision/wasm",
    "scsys/wasm",
    "rayon?/web_spin_lock",
]
# ************* [FF:Dependencies] *************
alloc = [
    "concision/alloc",
    "num/alloc",
    "scsys/alloc",
    "serde?/alloc",
    "serde_json?/alloc",
]

anyhow = [
    "dep:anyhow",
    "concision/anyhow",
    "scsys/anyhow",
]

approx = [
    "dep:approx",
    "concision/approx",
    "ndarray/approx",
]

blas = [
    "concision/blas",
    "ndarray/blas",
]

complex = ["dep:num-complex"]

rand = [
    "concision/rand",
    "num/rand",
    "num-complex?/rand",
]

rayon = [
    "concision/rayon",
    "ndarray/rayon",
]

rng = [
    "concision/rng",
    "scsys/rng",
]

rustfft = ["dep:rustfft"]

serde = [
    "dep:serde",
    "dep:serde_derive",
    "concision/serde",
    "ndarray/serde",
    "num/serde",
    "num-complex?/serde",
    "scsys/serde",
]

serde_json = ["dep:serde_json"]

tracing = [
    "dep:tracing",
    "concision/tracing",
    "scsys/tracing",
]

# ************* [Unit Tests] *************
[[test]]
name = "attention"
required-features = ["approx", "attention", "default", "rand"]